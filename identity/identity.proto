syntax = "proto3";
package identity;
 
import "model/error.proto";
import "model/identity.proto";

option go_package = "github.com/ez-deploy/protobuf/identity";

service IdentityOps {
    // Register by email and password.
    rpc Register (RegisterReq) returns (model.CommonResp) {}
    // Login by email and password.
    rpc Login (LoginReq) returns (LoginResp) {}
    // Verify by session_token.
    rpc Verify (VerifyReq) returns (VerifyResp) {}

    // generate private_token.
    rpc ReGeneratePrivateToken(model.Identity) returns (model.CommonResp);
    // get private_token.
    rpc GetPrivateToken(model.Identity) returns (model.Token);

    // generate public_token.
    rpc GeneratePublicToken(GeneratePublicTokenReq) returns (model.CommonResp);
    // list user's public_tokens.
    rpc ListPublicToken(model.Identity) returns (ListPublicTokenResp);
    // delete public_token.
    rpc DeletePublicToken(DeletePublicTokenReq) returns (model.CommonResp);
}

message RegisterReq {
    model.Identity identity = 1;
    string password = 2;
}

message LoginReq {
    string email = 1;
    string password = 2;
}

message LoginResp {
    model.Error error = 1;
    model.Identity identity = 2;
    model.Token token = 3;
}

message VerifyReq {
    model.Token token = 1;
};

message VerifyResp {
    model.Error error = 1;
    model.Identity identity = 2;
    model.TokenType token_type = 3;
}

message GeneratePublicTokenReq {
    model.Identity identity = 1;
    model.APIToken api_token = 2; // to be generated.
}

message ListPublicTokenResp {
    model.Error error = 1;
    repeated model.APIToken public_tokens = 2; 
}

message DeletePublicTokenReq {
    int64 token_id = 1;
    model.Identity identity = 2;
}
